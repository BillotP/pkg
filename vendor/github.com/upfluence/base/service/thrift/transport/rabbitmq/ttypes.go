// Autogenerated by Thrift Compiler (1.0.0-upfluence)
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING

package rabbitmq

import (
	"bytes"
	"fmt"
	"github.com/upfluence/thrift/lib/go/thrift"
	"time"
)

// (needed to ensure safety because of naive import list construction.)
var _ = thrift.ZERO
var _ = fmt.Printf
var _ = bytes.Equal
var _ = time.Now()

var GoUnusedProtection__ int

// Attributes:
//  - ExchangeName
//  - RoutingKey
type Transport struct {
	ExchangeName string `thrift:"exchange_name,1,required" json:"exchange_name"`
	RoutingKey   string `thrift:"routing_key,2,required" json:"routing_key"`
}

func NewTransport() *Transport {
	return &Transport{}
}

func (p *Transport) GetExchangeName() string {
	return p.ExchangeName
}

func (p *Transport) GetRoutingKey() string {
	return p.RoutingKey
}
func (p *Transport) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	var issetExchangeName bool = false
	var issetRoutingKey bool = false

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
			issetExchangeName = true
		case 2:
			if err := p.ReadField2(iprot); err != nil {
				return err
			}
			issetRoutingKey = true
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	if !issetExchangeName {
		return thrift.NewTProtocolExceptionWithType(thrift.INVALID_DATA, fmt.Errorf("Required field ExchangeName is not set"))
	}
	if !issetRoutingKey {
		return thrift.NewTProtocolExceptionWithType(thrift.INVALID_DATA, fmt.Errorf("Required field RoutingKey is not set"))
	}
	return nil
}

func (p *Transport) ReadField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 1: ", err)
	} else {
		p.ExchangeName = v
	}
	return nil
}

func (p *Transport) ReadField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 2: ", err)
	} else {
		p.RoutingKey = v
	}
	return nil
}

func (p *Transport) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("Transport"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if err := p.writeField1(oprot); err != nil {
		return err
	}
	if err := p.writeField2(oprot); err != nil {
		return err
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *Transport) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("exchange_name", thrift.STRING, 1); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:exchange_name: ", p), err)
	}
	if err := oprot.WriteString(string(p.ExchangeName)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.exchange_name (1) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 1:exchange_name: ", p), err)
	}
	return err
}

func (p *Transport) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("routing_key", thrift.STRING, 2); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:routing_key: ", p), err)
	}
	if err := oprot.WriteString(string(p.RoutingKey)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.routing_key (2) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 2:routing_key: ", p), err)
	}
	return err
}

func (p *Transport) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("Transport(%+v)", *p)
}
